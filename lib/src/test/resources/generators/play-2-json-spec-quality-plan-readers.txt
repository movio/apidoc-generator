implicit def jsonReadsQualityPlan: play.api.libs.json.Reads[Plan] = new play.api.libs.json.Reads[Plan] {
  def reads(json: play.api.libs.json.JsValue) = {
    try {
      (
        (__ \ "id").read[Long] and
        (__ \ "incident_id").read[Long] and
        (__ \ "body").read[String] and
        (__ \ "grade").readNullable[Int] and
        (__ \ "created_at").read[_root_.org.joda.time.DateTime]
      )(Plan.apply _).reads(json)
    } catch {
      // Catch Validation Errors
      case ex: IllegalArgumentException => play.api.libs.json.JsError(s"${ex.getMessage}")
    }
  }
}
