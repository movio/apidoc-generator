package test.apidoc.apidoctest.v0.models {

  case class User(
    age: String,
    dateTime: _root_.org.joda.time.LocalDateTime,
    optionalDateTime: _root_.scala.Option[_root_.org.joda.time.LocalDateTime] = None
  ) extends com.github.BaseClass {

    import Validation._
    validateLength("age", age, 10)
  }

  object Validation {

    def validateLength(name: String, value: _root_.scala.Option[String], length: Int): Unit = {
      value foreach { value ⇒
        validateLength(name, value, length)
      }
    }

    def validateLength(name: String, value: String, length: Int): Unit = {
      require(value.length <= length, s"$name must be $length characters or less")
    }

    def validateLengthOfAll(name: String, values: _root_.scala.Option[Seq[String]], length: Int): Unit = {
      values foreach { values ⇒
        validateLengthOfAll(name, values, length)
      }
    }

    def validateLengthOfAll(name: String, values: Seq[String], length: Int): Unit = {
      values foreach { value ⇒
        validateLength(name, value, length)
      }
    }

  }

}