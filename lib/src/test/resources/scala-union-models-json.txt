implicit def jsonReadsApiDocTestGuestUser: play.api.libs.json.Reads[GuestUser] = {
  (
    (__ \ "id").read[Long] and
    (__ \ "email").read[String] and
    (__ \ "name").readNullable[String] and
    (__ \ "bar").read[String]
  )(GuestUser.apply _)
}

implicit def jsonWritesApiDocTestGuestUser: play.api.libs.json.Writes[GuestUser] = {
  (
    (__ \ "id").write[Long] and
    (__ \ "email").write[String] and
    (__ \ "name").writeNullable[String] and
    (__ \ "bar").write[String]
  )(unlift(GuestUser.unapply _))
}

implicit def jsonReadsApiDocTestRegisteredUser: play.api.libs.json.Reads[RegisteredUser] = {
  (
    (__ \ "id").read[Long] and
    (__ \ "email").read[String] and
    (__ \ "name").readNullable[String] and
    (__ \ "foo").read[String]
  )(RegisteredUser.apply _)
}

implicit def jsonWritesApiDocTestRegisteredUser: play.api.libs.json.Writes[RegisteredUser] = {
  (
    (__ \ "id").write[Long] and
    (__ \ "email").write[String] and
    (__ \ "name").writeNullable[String] and
    (__ \ "foo").write[String]
  )(unlift(RegisteredUser.unapply _))
}

implicit def jsonReadsApiDocTestUser: play.api.libs.json.Reads[User] = {
  (
    (__ \ "registered_user").read(jsonReadsApiDocTestRegisteredUser).asInstanceOf[play.api.libs.json.Reads[User]]
    orElse
    (__ \ "guest_user").read(jsonReadsApiDocTestGuestUser).asInstanceOf[play.api.libs.json.Reads[User]]
    orElse
    play.api.libs.json.Reads(jsValue => play.api.libs.json.JsSuccess(test.apidoc.apidoctest.v0.models.UserUndefinedType(jsValue.toString))).asInstanceOf[play.api.libs.json.Reads[User]]
  )
}

implicit def jsonWritesApiDocTestUser: play.api.libs.json.Writes[User] = new play.api.libs.json.Writes[User] {
  def writes(obj: User) = obj match {
    case x: test.apidoc.apidoctest.v0.models.RegisteredUser => play.api.libs.json.Json.obj("registered_user" -> jsonWritesApiDocTestRegisteredUser.writes(x))
    case x: test.apidoc.apidoctest.v0.models.GuestUser => play.api.libs.json.Json.obj("guest_user" -> jsonWritesApiDocTestGuestUser.writes(x))
    case x: test.apidoc.apidoctest.v0.models.UserUndefinedType => sys.error(s"The type[test.apidoc.apidoctest.v0.models.UserUndefinedType] should never be serialized")
  }
}