{
  "apidoc": {
    "version": "0.9.4"
  },
  "name": "Quality",
  "organization": {
    "key": "gilt"
  },
  "application": {
    "key": "quality"
  },
  "namespace": "com.gilt.quality.v0",
  "version": "0.0.1-dev",
  "base_url": "http://api.quality.architecture.giltaws.com",
  "description": "Application to track perfect day and quality at gilt.",
  "headers": [],
  "info": [],
  "imports": [],
  "attributes": [],
  "enums": [
    {
      "name": "external_service_name",
      "attributes": [],
      "plural": "external_service_names",
      "description": "An external service with which an organization can integrate.",
      "values": [
        {
          "name": "jira",
          "attributes": [],
          "description": "Atlassian JIRA. If integration is enabled, an incident can be created by listing the jira ISSUE number directly."
        }
      ]
    },
    {
      "name": "publication",
      "attributes": [],
      "plural": "publications",
      "description": "A publication represents something that a user can subscribe to. An example would be subscribing via email to the publication of all new incidents.",
      "values": [
        {
          "name": "incidents.create",
          "attributes": [],
          "description": "Email notification whenever an incident is created."
        },
        {
          "name": "incidents.update",
          "attributes": [],
          "description": "Email notification whenever an incident is updated."
        },
        {
          "name": "plans.create",
          "attributes": [],
          "description": "Email notification whenever a plan is created."
        },
        {
          "name": "plans.update",
          "attributes": [],
          "description": "Email notification whenever a plan is updated."
        },
        {
          "name": "meetings.adjourned",
          "attributes": [],
          "description": "Email notification whenever a meeting is adjourned."
        },
        {
          "name": "incidents.team_update",
          "attributes": [],
          "description": "Email notification whenever a team that you are on is assigned to an incident."
        }
      ]
    },
    {
      "name": "response",
      "attributes": [],
      "plural": "responses",
      "values": [
        {
          "name": "Complete",
          "attributes": []
        },
        {
          "name": "Not Yet",
          "attributes": []
        },
        {
          "name": "Will not complete",
          "attributes": []
        }
      ]
    },
    {
      "name": "severity",
      "attributes": [],
      "plural": "severities",
      "values": [
        {
          "name": "low",
          "attributes": []
        },
        {
          "name": "high",
          "attributes": []
        }
      ]
    },
    {
      "name": "task",
      "attributes": [],
      "plural": "tasks",
      "description": "Describes what needs to be reviewed about a specific incident",
      "values": [
        {
          "name": "review_team",
          "attributes": [],
          "description": "Used in meetings to indicate that a team should be assigned to the incident or that the group should review the team assignment to make sure it is correct."
        },
        {
          "name": "review_plan",
          "attributes": [],
          "description": "Indicates that the incident plan should be reviewed and rated"
        }
      ]
    }
  ],
  "unions": [],
  "models": [
    {
      "name": "adjourn_form",
      "attributes": [],
      "plural": "adjourn_forms",
      "fields": [
        {
          "name": "adjourned_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "description": "Defaults to the time of the request",
          "required": false
        }
      ]
    },
    {
      "name": "agenda_item",
      "attributes": [],
      "plural": "agenda_items",
      "description": "Describe an agenda item for a meeting. Currently the only agenda items we have are that a particular incident needs to be reviewed.",
      "fields": [
        {
          "name": "id",
          "attributes": [],
          "type": "long",
          "description": "Internal unique identifier for this record.",
          "required": true
        },
        {
          "name": "meeting",
          "attributes": [],
          "type": "meeting",
          "description": "The meeting to which this agenda item belongs",
          "required": true
        },
        {
          "name": "incident",
          "attributes": [],
          "type": "incident",
          "description": "Summary of the incident to review.",
          "required": true
        },
        {
          "name": "task",
          "attributes": [],
          "type": "task",
          "description": "What needs to be reviewed at this meeting for this incident.",
          "required": true
        }
      ]
    },
    {
      "name": "agenda_item_form",
      "attributes": [],
      "plural": "agenda_item_forms",
      "fields": [
        {
          "name": "meeting_id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "incident_id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "task",
          "attributes": [],
          "type": "task",
          "required": true
        }
      ]
    },
    {
      "name": "authentication_form",
      "attributes": [],
      "plural": "authentication_forms",
      "fields": [
        {
          "name": "email",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "email_message",
      "attributes": [],
      "plural": "email_messages",
      "fields": [
        {
          "name": "subject",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "body",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "error",
      "attributes": [],
      "plural": "errors",
      "fields": [
        {
          "name": "code",
          "attributes": [],
          "type": "string",
          "description": "Machine readable code for this specific error message",
          "required": true
        },
        {
          "name": "message",
          "attributes": [],
          "type": "string",
          "description": "Description of the error",
          "required": true
        }
      ]
    },
    {
      "name": "external_service",
      "attributes": [],
      "plural": "external_services",
      "description": "Stores metadata about external services that can be integrated with the quality app",
      "fields": [
        {
          "name": "id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "organization",
          "attributes": [],
          "type": "organization",
          "required": true
        },
        {
          "name": "name",
          "attributes": [],
          "type": "external_service_name",
          "required": true
        },
        {
          "name": "url",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "username",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "external_service_form",
      "attributes": [],
      "plural": "external_service_forms",
      "fields": [
        {
          "name": "name",
          "attributes": [],
          "type": "external_service_name",
          "required": true
        },
        {
          "name": "url",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "username",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "password",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "followup",
      "attributes": [],
      "plural": "followups",
      "description": "Every n days (e.g. 30) we follow up to see if a given plan has been implemented. This gives teams the ability to say: Yes, completed. Not yet. or No, won't do. After 3 consecutive no replies, we assume not doing.",
      "fields": [
        {
          "name": "key",
          "attributes": [],
          "type": "string",
          "description": "Unique token identifying this response",
          "required": true
        },
        {
          "name": "plan",
          "attributes": [],
          "type": "plan",
          "required": true
        },
        {
          "name": "sent_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "name": "followup_response",
      "attributes": [],
      "plural": "followup_responses",
      "description": "Every n days (e.g. 30) we follow up to see if a given plan has been implemented. This gives teams the ability to say: Yes, completed. Not yet. or No, won't do. After 3 consecutive no replies, we assume not doing.",
      "fields": [
        {
          "name": "followup",
          "attributes": [],
          "type": "followup",
          "required": true
        },
        {
          "name": "response",
          "attributes": [],
          "type": "response",
          "required": true
        },
        {
          "name": "created_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "created_by",
          "attributes": [],
          "type": "user",
          "required": true
        }
      ]
    },
    {
      "name": "healthcheck",
      "attributes": [],
      "plural": "healthchecks",
      "fields": [
        {
          "name": "status",
          "attributes": [],
          "type": "string",
          "deprecation": {
            "description": "please use audience.label instead"
          },
          "required": true,
          "example": "healthy"
        }
      ]
    },
    {
      "name": "icons",
      "attributes": [],
      "plural": "iconses",
      "description": "URLs to key icons used through the application",
      "fields": [
        {
          "name": "smiley_url",
          "attributes": [],
          "type": "string",
          "description": "URL for the smiley icon",
          "required": true
        },
        {
          "name": "frowny_url",
          "attributes": [],
          "type": "string",
          "description": "URL for the frowny icon",
          "required": true
        }
      ]
    },
    {
      "name": "incident",
      "attributes": [],
      "plural": "incidents",
      "description": "A bug or error that affected public or internal users in a negative way",
      "fields": [
        {
          "name": "id",
          "attributes": [],
          "type": "long",
          "description": "Internal unique identifier for this incident.",
          "required": true
        },
        {
          "name": "organization",
          "attributes": [],
          "type": "organization",
          "description": "Organization to which this incident belongs",
          "required": true
        },
        {
          "name": "summary",
          "attributes": [],
          "type": "string",
          "description": "Summary of the incident.",
          "required": true
        },
        {
          "name": "description",
          "attributes": [],
          "type": "string",
          "description": "Full description of the incident",
          "required": false
        },
        {
          "name": "team",
          "attributes": [],
          "type": "team",
          "description": "Team responsible for resolution of this incident",
          "required": false
        },
        {
          "name": "severity",
          "attributes": [],
          "type": "severity",
          "required": true
        },
        {
          "name": "tags",
          "attributes": [],
          "type": "[string]",
          "description": "Optional list of tags to apply to this incident",
          "required": false
        },
        {
          "name": "plan",
          "attributes": [],
          "type": "plan",
          "required": false
        },
        {
          "name": "created_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "name": "incident_form",
      "attributes": [],
      "plural": "incident_forms",
      "fields": [
        {
          "name": "team_key",
          "attributes": [],
          "type": "string",
          "description": "Team responsible for resolution of this incident",
          "required": false
        },
        {
          "name": "severity",
          "attributes": [],
          "type": "severity",
          "required": true
        },
        {
          "name": "summary",
          "attributes": [],
          "type": "string",
          "description": "Summary of the incident.",
          "required": true
        },
        {
          "name": "description",
          "attributes": [],
          "type": "string",
          "description": "Full description of the incident",
          "required": false
        },
        {
          "name": "tags",
          "attributes": [],
          "type": "[string]",
          "description": "Optional list of tags to apply to this incident",
          "required": false
        }
      ]
    },
    {
      "name": "incident_organization_change",
      "attributes": [],
      "plural": "incident_organization_changes",
      "description": "Used to move an incident to another organization",
      "fields": [
        {
          "name": "incident_id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "organization_key",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "incident_summary",
      "attributes": [],
      "plural": "incident_summaries",
      "fields": [
        {
          "name": "id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "severity",
          "attributes": [],
          "type": "severity",
          "required": true
        },
        {
          "name": "summary",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "meeting",
      "attributes": [],
      "plural": "meetings",
      "description": "Meetings happen on a regular schedule (e.g. thursdays from 11-12 EST). As incidents are created, they are automatically assigned to the next meeting. Incidents can then be reviewed from the context of a meeting, facilitating online navigation. Incidents within a meeting can require one of two actions - team assignment or plan review.",
      "fields": [
        {
          "name": "id",
          "attributes": [],
          "type": "long",
          "description": "Internal unique identifier for this meeting.",
          "required": true
        },
        {
          "name": "organization",
          "attributes": [],
          "type": "organization",
          "description": "Organization to which this meeting belongs",
          "required": true
        },
        {
          "name": "scheduled_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "description": "The date and time for which this meeting is scheduled.",
          "required": true
        },
        {
          "name": "adjourned_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "description": "The date and time at which this meeting was adjourned. This can be done explicitly by a person, or will automatically occur a few hours after the meeting's scheduled time.",
          "required": false
        }
      ]
    },
    {
      "name": "meeting_form",
      "attributes": [],
      "plural": "meeting_forms",
      "fields": [
        {
          "name": "scheduled_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "name": "meeting_pager",
      "attributes": [],
      "plural": "meeting_pagers",
      "description": "Used to enable pagination when walking through the issues in a particular meeting. General idea is given a meeting id and an incident id, returns the previous and next incident IDs, if any",
      "fields": [
        {
          "name": "meeting",
          "attributes": [],
          "type": "meeting",
          "required": true
        },
        {
          "name": "prior_incident",
          "attributes": [],
          "type": "incident",
          "required": false
        },
        {
          "name": "next_incident",
          "attributes": [],
          "type": "incident",
          "required": false
        }
      ]
    },
    {
      "name": "organization",
      "attributes": [],
      "plural": "organizations",
      "description": "Top level organization for which we are managing quality. Key entities like teams and meetings are scoped to the organization.",
      "fields": [
        {
          "name": "key",
          "attributes": [],
          "type": "string",
          "description": "Used as a unique key for this organization that is URL safe.",
          "required": true
        },
        {
          "name": "name",
          "attributes": [],
          "type": "string",
          "description": "The name of this organization.",
          "required": true
        }
      ]
    },
    {
      "name": "organization_form",
      "attributes": [],
      "plural": "organization_forms",
      "fields": [
        {
          "name": "name",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "attributes": [],
          "type": "string",
          "description": "Defaults to a url friendy version of the name",
          "required": false
        }
      ]
    },
    {
      "name": "plan",
      "attributes": [],
      "plural": "plans",
      "description": "Details for how an incident will be resolved",
      "fields": [
        {
          "name": "id",
          "attributes": [],
          "type": "long",
          "description": "Internal unique identifier for this incident.",
          "required": true
        },
        {
          "name": "incident_id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "body",
          "attributes": [],
          "type": "string",
          "description": "Full description of the incident",
          "required": true
        },
        {
          "name": "grade",
          "attributes": [],
          "type": "integer",
          "description": "Grade given to this plan on a scale of 0 (bad) to 100 (good)",
          "required": false,
          "minimum": 0,
          "maximum": 100
        },
        {
          "name": "created_at",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "name": "plan_form",
      "attributes": [],
      "plural": "plan_forms",
      "fields": [
        {
          "name": "incident_id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "body",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "statistic",
      "attributes": [],
      "plural": "statistics",
      "description": "Statistics on each team's quality metrics, number of issues",
      "fields": [
        {
          "name": "team",
          "attributes": [],
          "type": "team",
          "description": "Team for statistics.",
          "required": true
        },
        {
          "name": "total_grades",
          "attributes": [],
          "type": "long",
          "description": "Number of graded plans given time span requested.",
          "required": true
        },
        {
          "name": "average_grade",
          "attributes": [],
          "type": "integer",
          "description": "Average grade for graded plans given time span requested.",
          "required": false
        },
        {
          "name": "total_open_incidents",
          "attributes": [],
          "type": "long",
          "description": "Number of incidents without a plan for this team.",
          "required": true
        },
        {
          "name": "total_incidents",
          "attributes": [],
          "type": "long",
          "description": "Number of incidents reported in the time span requested.",
          "required": true
        },
        {
          "name": "total_plans",
          "attributes": [],
          "type": "long",
          "description": "Number of plans attached to reported incidents in the time span requested.",
          "required": true
        },
        {
          "name": "plans",
          "attributes": [],
          "type": "[plan]",
          "description": "Last plans to display grades for.",
          "required": false
        }
      ]
    },
    {
      "name": "subscription",
      "attributes": [],
      "plural": "subscriptions",
      "description": "Represents a user that is currently subscribed to a publication",
      "fields": [
        {
          "name": "id",
          "attributes": [],
          "type": "long",
          "description": "Internal unique identifier for this subscription record",
          "required": true
        },
        {
          "name": "organization",
          "attributes": [],
          "type": "organization",
          "required": true
        },
        {
          "name": "user",
          "attributes": [],
          "type": "user",
          "required": true
        },
        {
          "name": "publication",
          "attributes": [],
          "type": "publication",
          "required": true
        }
      ]
    },
    {
      "name": "subscription_form",
      "attributes": [],
      "plural": "subscription_forms",
      "fields": [
        {
          "name": "organization_key",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "user_guid",
          "attributes": [],
          "type": "uuid",
          "required": true
        },
        {
          "name": "publication",
          "attributes": [],
          "type": "publication",
          "required": true
        }
      ]
    },
    {
      "name": "team",
      "attributes": [],
      "plural": "teams",
      "description": "A team is the main actor in the system. Teams have a unique key and own incidents",
      "fields": [
        {
          "name": "organization",
          "attributes": [],
          "type": "organization",
          "description": "Organization to which this team belongs",
          "required": true
        },
        {
          "name": "key",
          "attributes": [],
          "type": "string",
          "description": "Unique identifier for this team",
          "required": true
        },
        {
          "name": "email",
          "attributes": [],
          "type": "string",
          "description": "Email address for members of this team. If provided, used to send updates on new incidents, meetings, etc.",
          "required": false
        },
        {
          "name": "icons",
          "attributes": [],
          "type": "icons",
          "description": "Set of icons used on the site for this team (e.g. smiley and frowney faces). Teams inherit a default set of icons if not otherwise provided.",
          "required": true
        }
      ]
    },
    {
      "name": "team_form",
      "attributes": [],
      "plural": "team_forms",
      "fields": [
        {
          "name": "key",
          "attributes": [],
          "type": "string",
          "description": "Unique identifier for this team",
          "required": true
        },
        {
          "name": "email",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "smiley_url",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "frowny_url",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "name": "team_member",
      "attributes": [],
      "plural": "team_members",
      "fields": [
        {
          "name": "team",
          "attributes": [],
          "type": "team",
          "required": true
        },
        {
          "name": "user",
          "attributes": [],
          "type": "user",
          "required": true
        }
      ]
    },
    {
      "name": "team_member_summary",
      "attributes": [],
      "plural": "team_member_summaries",
      "description": "Statistics on each team's quality metrics, number of issues",
      "fields": [
        {
          "name": "team",
          "attributes": [],
          "type": "team",
          "required": true
        },
        {
          "name": "number_members",
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "name": "update_team_form",
      "attributes": [],
      "plural": "update_team_forms",
      "fields": [
        {
          "name": "email",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "smiley_url",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "frowny_url",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "name": "user",
      "attributes": [],
      "plural": "users",
      "description": "A user is a top level person.",
      "fields": [
        {
          "name": "guid",
          "attributes": [],
          "type": "uuid",
          "description": "Internal unique identifier for this user.",
          "required": true
        },
        {
          "name": "email",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "name": "user_form",
      "attributes": [],
      "plural": "user_forms",
      "fields": [
        {
          "name": "email",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    }
  ],
  "resources": [
    {
      "type": "agenda_item",
      "attributes": [],
      "plural": "agenda_items",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/agenda_items",
          "description": "Search agenda items for a given meeting. Results are always paginated.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find agenda items with this id",
              "required": false
            },
            {
              "name": "meeting_id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find agenda items for this meeting",
              "required": false
            },
            {
              "name": "incident_id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find agenda items for this incident",
              "required": false
            },
            {
              "name": "team_key",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find agenda items for this team",
              "required": false
            },
            {
              "name": "user_guid",
              "attributes": [],
              "type": "uuid",
              "location": "Query",
              "description": "Find agenda items filtered by the teams this user is on.",
              "required": false
            },
            {
              "name": "is_adjourned",
              "attributes": [],
              "type": "boolean",
              "location": "Query",
              "description": "If false, limit to agenda items for meetings that have not yet been adjourned. If true, limit to agenda items for meetings that have been adjourned",
              "required": false
            },
            {
              "name": "task",
              "attributes": [],
              "type": "task",
              "location": "Query",
              "description": "Find agenda items with this task",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[agenda_item]",
              "attributes": []
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/agenda_items/:id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "agenda_item",
              "attributes": []
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/:org/agenda_items",
          "description": "Creates an agenda item for this meeting.",
          "body": {
            "attributes": [],
            "type": "agenda_item_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "agenda_item"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/:org/agenda_items/:id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        }
      ]
    },
    {
      "type": "email_message",
      "attributes": [],
      "plural": "email_messages",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/email_messages/meeting_adjourned/:meeting_id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "meeting_id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "email_message"
            }
          ]
        }
      ]
    },
    {
      "type": "external_service",
      "attributes": [],
      "plural": "external_services",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/external_services",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "required": false
            },
            {
              "name": "name",
              "attributes": [],
              "type": "external_service_name",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[external_service]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/external_services/:id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "external_service"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/:org/external_services",
          "body": {
            "attributes": [],
            "type": "external_service_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "external_service"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/:org/external_services/:id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        }
      ]
    },
    {
      "type": "healthcheck",
      "attributes": [],
      "plural": "healthchecks",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/_internal_/healthcheck",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "healthcheck"
            }
          ]
        }
      ]
    },
    {
      "type": "incident",
      "attributes": [],
      "plural": "incidents",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/incidents",
          "description": "Search all incidents. Results are always paginated.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find incident with this id. Exact match",
              "required": false
            },
            {
              "name": "team_key",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find incidents for which this team is responsible. Exact match",
              "required": false
            },
            {
              "name": "has_team",
              "attributes": [],
              "type": "boolean",
              "location": "Query",
              "description": "If true, find incidents with a team assigned to them. If false, find incidents w/out a team",
              "required": false
            },
            {
              "name": "has_plan",
              "attributes": [],
              "type": "boolean",
              "location": "Query",
              "description": "If true, find incidents with a plan. If false, find incidents w/out a plan",
              "required": false
            },
            {
              "name": "has_grade",
              "attributes": [],
              "type": "boolean",
              "location": "Query",
              "description": "If true, find incidents with a grade. If false, find incidents w/out a grade",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[incident]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/incidents/:id",
          "description": "Returns information about the incident with this specific id.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "incident"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/:org/incidents",
          "description": "Create a new incident.",
          "body": {
            "attributes": [],
            "type": "incident_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "incident"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "PUT",
          "attributes": [],
          "path": "/:org/incidents/:id",
          "description": "Updates an incident.",
          "body": {
            "attributes": [],
            "type": "incident_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "incident"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/:org/incidents/:id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        }
      ]
    },
    {
      "type": "incident_organization_change",
      "attributes": [],
      "plural": "incident_organization_changes",
      "operations": [
        {
          "method": "POST",
          "attributes": [],
          "path": "/incident_organization_changes",
          "body": {
            "attributes": [],
            "type": "incident_organization_change"
          },
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "incident"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        }
      ]
    },
    {
      "type": "meeting",
      "attributes": [],
      "plural": "meetings",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/meetings",
          "description": "Search all meetings. Results are always paginated.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find meeting with this id. Exact match",
              "required": false
            },
            {
              "name": "incident_id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find meetings where this incident_id is on the agenda",
              "required": false
            },
            {
              "name": "agenda_item_id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find meeting based on this agenda item",
              "required": false
            },
            {
              "name": "is_adjourned",
              "attributes": [],
              "type": "boolean",
              "location": "Query",
              "description": "Find meetings that have or have not been adjourned",
              "required": false
            },
            {
              "name": "is_upcoming",
              "attributes": [],
              "type": "boolean",
              "location": "Query",
              "description": "Find meetings that are upcoming (true) or have passed (false)",
              "required": false
            },
            {
              "name": "order_by",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "field_name:direction",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[meeting]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/meetings/:id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "meeting"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/:org/meetings",
          "description": "Creates a meeting. In general meetings are created automatically",
          "body": {
            "attributes": [],
            "type": "meeting_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "meeting"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/:org/meetings/:id/adjourn",
          "description": "Records that a meeting has been adjourned. Will return a validation error if the meeting had previously been adjourned",
          "body": {
            "attributes": [],
            "type": "adjourn_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "meeting"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/:org/meetings/:id",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/meetings/:id/pager/:incident_id",
          "description": "Get information on paging through incidents (e.g. the prior or next incident in a given meeting)",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            },
            {
              "name": "incident_id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "description": "The incident ID that you are looking at. Pager information will be returned including the incident prior to and after this incident, if available.",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "meeting_pager"
            }
          ]
        }
      ]
    },
    {
      "type": "organization",
      "attributes": [],
      "plural": "organizations",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/organizations",
          "description": "Search all organizations. Results are always paginated.",
          "parameters": [
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find organization with this id",
              "required": false
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find organization with this key",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[organization]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/organizations/:key",
          "parameters": [
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "organization"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/organizations",
          "body": {
            "attributes": [],
            "type": "organization_form"
          },
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "organization"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/organizations/:key",
          "parameters": [
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        }
      ]
    },
    {
      "type": "plan",
      "attributes": [],
      "plural": "plans",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/plans",
          "description": "Search all plans. Results are always paginated.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find plan with this id. Exact match",
              "required": false
            },
            {
              "name": "incident_id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find plan for this incident_id",
              "required": false
            },
            {
              "name": "team_key",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find all plans for requested team",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[plan]"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/:org/plans",
          "description": "Create a plan.",
          "body": {
            "attributes": [],
            "type": "plan_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "plan"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "PUT",
          "attributes": [],
          "path": "/:org/plans/:id",
          "description": "Update a plan.",
          "body": {
            "attributes": [],
            "type": "plan_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "plan"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "PUT",
          "attributes": [],
          "path": "/:org/plans/:id/grade",
          "description": "Update the grade assigned to a plan.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            },
            {
              "name": "grade",
              "attributes": [],
              "type": "integer",
              "location": "Form",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "plan"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/plans/:id",
          "description": "Get a single plan.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "plan"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/:org/plans/:id",
          "description": "Delete a plan.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        }
      ]
    },
    {
      "type": "statistic",
      "attributes": [],
      "plural": "statistics",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/statistics",
          "description": "Retrieve team statistics for all or one team.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "team_key",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find stats for this team. Leave blank to retrieve all teams",
              "required": false
            },
            {
              "name": "number_hours",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Number of hours in the past to retrieve requested statistics. Default is 1 week.",
              "required": true,
              "default": "168"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[statistic]"
            }
          ]
        }
      ]
    },
    {
      "type": "subscription",
      "attributes": [],
      "plural": "subscriptions",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/subscriptions",
          "description": "Search for a specific subscription.",
          "parameters": [
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Query",
              "description": "Find the subscription with this id.",
              "required": false
            },
            {
              "name": "organization_key",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find subscriptions for this organization.",
              "required": false
            },
            {
              "name": "user_guid",
              "attributes": [],
              "type": "uuid",
              "location": "Query",
              "description": "Find subscriptions for this user.",
              "required": false
            },
            {
              "name": "publication",
              "attributes": [],
              "type": "publication",
              "location": "Query",
              "description": "Find subscriptions for this publication.",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[subscription]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/subscriptions/:id",
          "description": "Returns information about this subscription.",
          "parameters": [
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "subscription"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/subscriptions",
          "description": "Create a new subscription.",
          "body": {
            "attributes": [],
            "type": "subscription_form"
          },
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "subscription"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/subscriptions/:id",
          "parameters": [
            {
              "name": "id",
              "attributes": [],
              "type": "long",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        }
      ]
    },
    {
      "type": "team",
      "attributes": [],
      "plural": "teams",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/teams",
          "description": "Search all teams. Results are always paginated.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find team with this key. Exact match",
              "required": false
            },
            {
              "name": "user_guid",
              "attributes": [],
              "type": "uuid",
              "location": "Query",
              "description": "Find teams that this user is a member of.",
              "required": false
            },
            {
              "name": "exclude_user_guid",
              "attributes": [],
              "type": "uuid",
              "location": "Query",
              "description": "Find teams that this user is NOT a member of.",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[team]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/teams/:key",
          "description": "Returns information about the team with this specific key.",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "team"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/:org/teams",
          "description": "Create a new team.",
          "body": {
            "attributes": [],
            "type": "team_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "team"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "PUT",
          "attributes": [],
          "path": "/:org/teams/:key",
          "description": "Update a team.",
          "body": {
            "attributes": [],
            "type": "update_team_form"
          },
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "team"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/:org/teams/:key",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/teams/:key/member_summary",
          "description": "Summary information about this teams members",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "team_member_summary"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/:org/teams/:key/members",
          "description": "Lists the members of this team",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "user_guid",
              "attributes": [],
              "type": "uuid",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "25",
              "minimum": 0,
              "maximum": 100
            },
            {
              "name": "offset",
              "attributes": [],
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[team_member]"
            }
          ]
        },
        {
          "method": "PUT",
          "attributes": [],
          "path": "/:org/teams/:key/members/:user_guid",
          "description": "Adds the specified user to this team",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "user_guid",
              "attributes": [],
              "type": "uuid",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "team_member"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "DELETE",
          "attributes": [],
          "path": "/:org/teams/:key/members/:user_guid",
          "description": "Removes this user from this team",
          "parameters": [
            {
              "name": "org",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "attributes": [],
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "user_guid",
              "attributes": [],
              "type": "uuid",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ]
        }
      ]
    },
    {
      "type": "user",
      "attributes": [],
      "plural": "users",
      "operations": [
        {
          "method": "GET",
          "attributes": [],
          "path": "/users",
          "description": "Search for a specific user. You must specify at least 1 parameter - either a guid or email - and will receive back either 0 or 1 users.",
          "parameters": [
            {
              "name": "guid",
              "attributes": [],
              "type": "uuid",
              "location": "Query",
              "description": "Find user with this guid. Exact match",
              "required": false
            },
            {
              "name": "email",
              "attributes": [],
              "type": "string",
              "location": "Query",
              "description": "Find user with this email address. Case in-sensitive. Exact match",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "[user]"
            }
          ]
        },
        {
          "method": "GET",
          "attributes": [],
          "path": "/users/:guid",
          "description": "Returns information about the user with this guid.",
          "parameters": [
            {
              "name": "guid",
              "attributes": [],
              "type": "uuid",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "attributes": [],
              "type": "user"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/users/authenticate",
          "description": "Used to authenticate a user with an email address and password. Successful authentication returns an instance of the user model. Failed authorizations of any kind are returned as a generic error with code user_authorization_failed.",
          "body": {
            "type": "authentication_form",
            "attributes": []
          },
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "attributes": []
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        },
        {
          "method": "POST",
          "attributes": [],
          "path": "/users",
          "description": "Create a new user.",
          "body": {
            "attributes": [],
            "type": "user_form"
          },
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "attributes": [],
              "type": "user"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "attributes": [],
              "type": "[error]"
            }
          ]
        }
      ]
    }
  ]
}
