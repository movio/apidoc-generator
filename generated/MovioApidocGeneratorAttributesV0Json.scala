/**
 * Generated by apidoc - http://www.apidoc.me
 * Service version: 0.1.0-SNAPSHOT
 * apidoc:0.9.48 http://localhost:9000/movio/apidoc-generator-attributes/0.1.0-SNAPSHOT/play_2_x_json_standalone
 */

package movio.apidoc.generator.attributes.v0.models {

  package object json {
    import play.api.libs.json.__
    import play.api.libs.json.JsString
    import play.api.libs.json.Writes
    import play.api.libs.functional.syntax._
    import movio.apidoc.generator.attributes.v0.models.json._

    private[v0] implicit val jsonReadsUUID = __.read[String].map(java.util.UUID.fromString)

    private[v0] implicit val jsonWritesUUID = new Writes[java.util.UUID] {
      def writes(x: java.util.UUID) = JsString(x.toString)
    }

    private[v0] implicit val jsonReadsJodaDateTime = __.read[String].map { str =>
      import org.joda.time.format.ISODateTimeFormat.dateTimeParser
      dateTimeParser.parseDateTime(str)
    }

    private[v0] implicit val jsonWritesJodaDateTime = new Writes[org.joda.time.DateTime] {
      def writes(x: org.joda.time.DateTime) = {
        import org.joda.time.format.ISODateTimeFormat.dateTime
        val str = dateTime.print(x)
        JsString(str)
      }
    }

    private[v0] implicit val jsonReadsJodaLocalDateTime = __.read[String].map { str =>
      import org.joda.time.format.ISODateTimeFormat.dateTimeParser
      dateTimeParser.parseLocalDateTime(str)
    }

    private[v0] implicit val jsonWritesJodaLocalDateTime = new Writes[org.joda.time.LocalDateTime] {
      def writes(x: org.joda.time.LocalDateTime) = {
        import org.joda.time.format.ISODateTimeFormat.dateTime
        val str = dateTime.print(x)
        JsString(str)
      }
    }

    implicit def jsonReadsApidocGeneratorAttributesKafkaProps: play.api.libs.json.Reads[KafkaProps] = {
      (
        (__ \ "data_type").read[String] and
        (__ \ "topic").read[String] and
        (__ \ "message_generate_key").read[String]
      )(KafkaProps.apply _)
    }

    implicit def jsonWritesApidocGeneratorAttributesKafkaProps: play.api.libs.json.Writes[KafkaProps] = {
      (
        (__ \ "data_type").write[String] and
        (__ \ "topic").write[String] and
        (__ \ "message_generate_key").write[String]
      )(unlift(KafkaProps.unapply _))
    }

    implicit def jsonReadsApidocGeneratorAttributesScalaFieldProps: play.api.libs.json.Reads[ScalaFieldProps] = {
      (
        (__ \ "class").readNullable[String] and
        (__ \ "default").readNullable[String] and
        (__ \ "example").readNullable[String]
      )(ScalaFieldProps.apply _)
    }

    implicit def jsonWritesApidocGeneratorAttributesScalaFieldProps: play.api.libs.json.Writes[ScalaFieldProps] = {
      (
        (__ \ "class").writeNullable[String] and
        (__ \ "default").writeNullable[String] and
        (__ \ "example").writeNullable[String]
      )(unlift(ScalaFieldProps.unapply _))
    }

    implicit def jsonReadsApidocGeneratorAttributesScalaModelProps: play.api.libs.json.Reads[ScalaModelProps] = {
      (__ \ "extends").readNullable[Seq[String]].map { x => new ScalaModelProps(`extends` = x) }
    }

    implicit def jsonWritesApidocGeneratorAttributesScalaModelProps: play.api.libs.json.Writes[ScalaModelProps] = new play.api.libs.json.Writes[ScalaModelProps] {
      def writes(x: ScalaModelProps) = play.api.libs.json.Json.obj(
        "extends" -> play.api.libs.json.Json.toJson(x.`extends`)
      )
    }
  }
}
